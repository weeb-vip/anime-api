package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.30

import (
	"context"
	"fmt"

	"github.com/weeb-vip/anime-api/graph/generated"
	"github.com/weeb-vip/anime-api/graph/model"
	"github.com/weeb-vip/anime-api/internal/resolvers"
)

// AnimeAPI is the resolver for the animeApi field.
func (r *apiInfoResolver) AnimeAPI(ctx context.Context, obj *model.APIInfo) (*model.AnimeAPI, error) {
	return resolvers.AnimeAPI(r.Config)
}

// DbSearch is the resolver for the dbSearch field.
func (r *queryResolver) DbSearch(ctx context.Context, searchQuery model.AnimeSearchInput) ([]*model.Anime, error) {
	panic(fmt.Errorf("not implemented: DbSearch - dbSearch"))
}

// APIInfo is the resolver for the apiInfo field.
func (r *queryResolver) APIInfo(ctx context.Context) (*model.APIInfo, error) {
	return resolvers.APIInfo(r.Config)
}

// Anime is the resolver for the anime field.
func (r *queryResolver) Anime(ctx context.Context, id string) (*model.Anime, error) {
	return resolvers.AnimeByID(ctx, r.AnimeService, id)
}

// ApiInfo returns generated.ApiInfoResolver implementation.
func (r *Resolver) ApiInfo() generated.ApiInfoResolver { return &apiInfoResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type apiInfoResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
